{"id":"2518255941","type":"PullRequestReviewCommentEvent","actor":{"id":51479,"login":"seanmonstar","gravatar_id":"","url":"https:\/\/api.github.com\/users\/seanmonstar","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51479?"},"repo":{"id":17527989,"name":"rust-lang\/rfcs","url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs"},"payload":{"action":"created","comment":{"url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/comments\/23107897","id":23107897,"diff_hunk":"@@ -0,0 +1,190 @@\n+- Start Date: 2015-01-13\n+- RFC PR: (leave this empty)\n+- Rust Issue: (leave this empty)\n+\n+# Summary\n+\n+Add a `size_hint` method to each of the `fmt` traits, allowing a buffer to allocate with the correct size before writing.\n+\n+# Motivation\n+\n+Using the `fmt` traits is slower than a straight `memcpy` of data. The removal of `std::is_utf8` has helped some. The other low-hanging fruit is to add a size hint, so as to reduce or prevent unnecessary allocations during writing to the output buffer. My initial implementation includes [benchmarks][], which looked like this on machine:\n+\n+[benchmarks]: https:\/\/gist.github.com\/seanmonstar\/8fb7aa6b0512b80522f9#file-size_hint-rs-L91-L162\n+\n+```\n+running 11 tests\n+test bench_long         ... bench:       133 ns\/iter (+\/- 18)\n+test bench_long_hint    ... bench:        72 ns\/iter (+\/- 10)\n+test bench_long_memcpy  ... bench:        44 ns\/iter (+\/- 2)\n+test bench_med          ... bench:       112 ns\/iter (+\/- 10)\n+test bench_med_hint     ... bench:        59 ns\/iter (+\/- 7)\n+test bench_med_memcpy   ... bench:        32 ns\/iter (+\/- 6)\n+test bench_nested       ... bench:       248 ns\/iter (+\/- 19)\n+test bench_nested_hint  ... bench:       134 ns\/iter (+\/- 6)\n+test bench_short        ... bench:        96 ns\/iter (+\/- 13)\n+test bench_short_hint   ... bench:        60 ns\/iter (+\/- 3)\n+test bench_short_memcpy ... bench:        33 ns\/iter (+\/- 3)\n+```\n+\n+# Detailed design\n+\n+## size_hint method\n+\n+Add a `size_hint` method to all of the `fmt` traits, with a default implementation so no one is broken. Opting in simply means better performance. All traits should have their own size_hint implementation, since the trait used can change the length of the output written.\n+\n+```rust\n+trait Show {\n+    fn fmt(&self, &mut Formatter) -> Result;\n+    fn size_hint(&self) -> SizeHint {\n+        SizeHint { min: 0, max: None }\n+    }\n+}\n+```\n+\n+## SizeHint type\n+\n+Add a `SizeHint` type, with named properties, instead of using tuple indexing. Include an `Add` implementation for `SizeHint`, so they can be easily added together from nested properties.\n+\n+```rust\n+struct SizeHint {\n+    min: usize,\n+    max: Option<usize>\n+}\n+\n+impl Add for SizeHint {\n+    type Output = SizeHint;\n+    fn add(self, other: SizeHint) -> SizeHint {\n+        SizeHint {\n+            min: self.min.saturating_add(other.min),\n+            max: if let (Some(left), Some(right)) = (self.max, other.max) {\n+                Some(left.checked_add(right)),\n+            } else {\n+                None\n+            }\n+        }\n+    }\n+}\n+```\n+\n+This type differs from `Iter::size_hint`, primarily to provide an `Add` implementation that doesn't interfere with `(usize, Option<usize>)` globally. Since using our own internal type, a struct with named properties is more expressive than a tuple-struct using tuple indexing.\n+\n+It's possible that `Iter::size_hint` could adopt the same type, but that seems out of scope of this RFC.\n+\n+## std::fmt::format\n+\n+There are 2 ways that the format traits are used: through `std::fmt::format`, and `std::string::ToString`. The `ToString` blanket implementation will be adjusted to simply wrap `std::fmt::format`, so there is no longer duplicated code.\n+\n+```rust\n+impl<T: fmt::String> ToString for T {\n+    fn to_string(&self) -> String {\n+        format!(\"{}\", self)\n+    }\n+}\n+```\n+\n+The size hint will be accessed in `std::fmt::format` to provide the initial capacity to the `fmt::Writer`. Since calls to `write!` use a pre-existing `Writer`, use of a size hint there is up to the creator of said `Writer`.\n+\n+Here is where we could be clever with `SizeHint`'s `min` and `max` values. Perhaps if difference is large enough, some value in between could be more efficient. This is left in the Unresolved Questions section.\n+\n+```rust\n+pub fn format(args: Arguments) -> string::String {\n+    let mut output = string::String::with_capacity(args.size_hint().min);\n+    let _ = write!(&mut output, \"{}\", args);\n+    output\n+}\n+```\n+\n+This involves implementing `size_hint` for `Arguments`:\n+\n+```rust\n+impl String for Arguments {\n+    \/\/fn fmt(&self, ...)\n+    fn size_hint(&self) -> SizeHint {\n+        let pieces = self.pieces.iter().fold(0, |sum, &piece| sum.saturating_add(piece.len()));\n+        let args = self.args.iter().fold(SizeHint { min: 0, max: None }, |sum, arg| {\n+            sum + String::size_hint(arg)\n+        });\n+        args + SizeHint { min: pieces, max: Some(pieces) }\n+    }\n+}\n+\n+```\n+\n+Each `Argument` includes a `fmt` function, and reference to the object to format, with its type erased. In order to get the `SizeHint`, the appropriate `size_hint` function will need to be included in the `Argument` struct.\n+\n+\n+```rust\n+pub struct Argument<'a> {\n+    value: &'a Void,\n+    formatter: fn(&Void, &mut Formatter) -> Result,\n+    hint: fn(&Void) -> SizeHint,\n+}","path":"text\/0000-fmt-size-hint.md","position":124,"original_position":122,"commit_id":"c93d35ce9ae6be36272a7772c7da56886e924afd","original_commit_id":"5e0ad266b011c14ce76f65ee3d698cb024fc2348","user":{"login":"seanmonstar","id":51479,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51479?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/seanmonstar","html_url":"https:\/\/github.com\/seanmonstar","followers_url":"https:\/\/api.github.com\/users\/seanmonstar\/followers","following_url":"https:\/\/api.github.com\/users\/seanmonstar\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/seanmonstar\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/seanmonstar\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/seanmonstar\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/seanmonstar\/orgs","repos_url":"https:\/\/api.github.com\/users\/seanmonstar\/repos","events_url":"https:\/\/api.github.com\/users\/seanmonstar\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/seanmonstar\/received_events","type":"User","site_admin":false},"body":"I was thinking about this as well. Currently, any function can be passed here, but if we didn't want that flexibility, we could create an `enum Format { Show, String, LowerHex, ... }` and change Argument to be `struct Argument { formatter: Format, value: &Void }`.","created_at":"2015-01-16T20:41:48Z","updated_at":"2015-01-16T20:41:48Z","html_url":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583#discussion_r23107897","pull_request_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583","_links":{"self":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/comments\/23107897"},"html":{"href":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583#discussion_r23107897"},"pull_request":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583"}}},"pull_request":{"url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583","id":27330281,"html_url":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583","diff_url":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583.diff","patch_url":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583.patch","issue_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/583","number":583,"state":"open","locked":false,"title":"Add fmt size_hints","user":{"login":"seanmonstar","id":51479,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51479?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/seanmonstar","html_url":"https:\/\/github.com\/seanmonstar","followers_url":"https:\/\/api.github.com\/users\/seanmonstar\/followers","following_url":"https:\/\/api.github.com\/users\/seanmonstar\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/seanmonstar\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/seanmonstar\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/seanmonstar\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/seanmonstar\/orgs","repos_url":"https:\/\/api.github.com\/users\/seanmonstar\/repos","events_url":"https:\/\/api.github.com\/users\/seanmonstar\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/seanmonstar\/received_events","type":"User","site_admin":false},"body":"Add a `size_hint` method to each of the `fmt` traits, allowing a buffer to allocate with the correct size before writing.\r\n\r\n[Rendered](https:\/\/github.com\/seanmonstar\/rfcs\/blob\/fmt-size-hint\/text\/0000-fmt-size-hint.md)\r\n\r\ncc @alexcrichton ","created_at":"2015-01-14T06:56:02Z","updated_at":"2015-01-16T20:41:48Z","closed_at":null,"merged_at":null,"merge_commit_sha":"4e71fe58371abefbcb735223bed22ce96c48e69a","assignee":null,"milestone":null,"commits_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583\/commits","review_comments_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583\/comments","review_comment_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/comments\/{number}","comments_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/583\/comments","statuses_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/statuses\/c93d35ce9ae6be36272a7772c7da56886e924afd","head":{"label":"seanmonstar:fmt-size-hint","ref":"fmt-size-hint","sha":"c93d35ce9ae6be36272a7772c7da56886e924afd","user":{"login":"seanmonstar","id":51479,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51479?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/seanmonstar","html_url":"https:\/\/github.com\/seanmonstar","followers_url":"https:\/\/api.github.com\/users\/seanmonstar\/followers","following_url":"https:\/\/api.github.com\/users\/seanmonstar\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/seanmonstar\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/seanmonstar\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/seanmonstar\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/seanmonstar\/orgs","repos_url":"https:\/\/api.github.com\/users\/seanmonstar\/repos","events_url":"https:\/\/api.github.com\/users\/seanmonstar\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/seanmonstar\/received_events","type":"User","site_admin":false},"repo":{"id":19090153,"name":"rfcs","full_name":"seanmonstar\/rfcs","owner":{"login":"seanmonstar","id":51479,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/51479?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/seanmonstar","html_url":"https:\/\/github.com\/seanmonstar","followers_url":"https:\/\/api.github.com\/users\/seanmonstar\/followers","following_url":"https:\/\/api.github.com\/users\/seanmonstar\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/seanmonstar\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/seanmonstar\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/seanmonstar\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/seanmonstar\/orgs","repos_url":"https:\/\/api.github.com\/users\/seanmonstar\/repos","events_url":"https:\/\/api.github.com\/users\/seanmonstar\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/seanmonstar\/received_events","type":"User","site_admin":false},"private":false,"html_url":"https:\/\/github.com\/seanmonstar\/rfcs","description":"RFCs for changes to Rust","fork":true,"url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs","forks_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/forks","keys_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/keys{\/key_id}","collaborators_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/collaborators{\/collaborator}","teams_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/teams","hooks_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/hooks","issue_events_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/issues\/events{\/number}","events_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/events","assignees_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/assignees{\/user}","branches_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/branches{\/branch}","tags_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/tags","blobs_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/git\/blobs{\/sha}","git_tags_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/git\/tags{\/sha}","git_refs_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/git\/refs{\/sha}","trees_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/git\/trees{\/sha}","statuses_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/statuses\/{sha}","languages_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/languages","stargazers_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/stargazers","contributors_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/contributors","subscribers_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/subscribers","subscription_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/subscription","commits_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/commits{\/sha}","git_commits_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/git\/commits{\/sha}","comments_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/comments{\/number}","issue_comment_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/issues\/comments\/{number}","contents_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/contents\/{+path}","compare_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/compare\/{base}...{head}","merges_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/merges","archive_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/{archive_format}{\/ref}","downloads_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/downloads","issues_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/issues{\/number}","pulls_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/pulls{\/number}","milestones_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/milestones{\/number}","notifications_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/notifications{?since,all,participating}","labels_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/labels{\/name}","releases_url":"https:\/\/api.github.com\/repos\/seanmonstar\/rfcs\/releases{\/id}","created_at":"2014-04-24T00:23:12Z","updated_at":"2014-11-21T19:46:17Z","pushed_at":"2015-01-16T20:39:47Z","git_url":"git:\/\/github.com\/seanmonstar\/rfcs.git","ssh_url":"git@github.com:seanmonstar\/rfcs.git","clone_url":"https:\/\/github.com\/seanmonstar\/rfcs.git","svn_url":"https:\/\/github.com\/seanmonstar\/rfcs","homepage":"","size":1177,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"open_issues_count":0,"forks":0,"open_issues":0,"watchers":0,"default_branch":"master"}},"base":{"label":"rust-lang:master","ref":"master","sha":"e0999be5aade97bb794d9f886bac31cfcb0f8a8d","user":{"login":"rust-lang","id":5430905,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5430905?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/rust-lang","html_url":"https:\/\/github.com\/rust-lang","followers_url":"https:\/\/api.github.com\/users\/rust-lang\/followers","following_url":"https:\/\/api.github.com\/users\/rust-lang\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/rust-lang\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/rust-lang\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/rust-lang\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/rust-lang\/orgs","repos_url":"https:\/\/api.github.com\/users\/rust-lang\/repos","events_url":"https:\/\/api.github.com\/users\/rust-lang\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/rust-lang\/received_events","type":"Organization","site_admin":false},"repo":{"id":17527989,"name":"rfcs","full_name":"rust-lang\/rfcs","owner":{"login":"rust-lang","id":5430905,"avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5430905?v=3","gravatar_id":"","url":"https:\/\/api.github.com\/users\/rust-lang","html_url":"https:\/\/github.com\/rust-lang","followers_url":"https:\/\/api.github.com\/users\/rust-lang\/followers","following_url":"https:\/\/api.github.com\/users\/rust-lang\/following{\/other_user}","gists_url":"https:\/\/api.github.com\/users\/rust-lang\/gists{\/gist_id}","starred_url":"https:\/\/api.github.com\/users\/rust-lang\/starred{\/owner}{\/repo}","subscriptions_url":"https:\/\/api.github.com\/users\/rust-lang\/subscriptions","organizations_url":"https:\/\/api.github.com\/users\/rust-lang\/orgs","repos_url":"https:\/\/api.github.com\/users\/rust-lang\/repos","events_url":"https:\/\/api.github.com\/users\/rust-lang\/events{\/privacy}","received_events_url":"https:\/\/api.github.com\/users\/rust-lang\/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https:\/\/github.com\/rust-lang\/rfcs","description":"RFCs for changes to Rust","fork":false,"url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs","forks_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/forks","keys_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/keys{\/key_id}","collaborators_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/collaborators{\/collaborator}","teams_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/teams","hooks_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/hooks","issue_events_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/events{\/number}","events_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/events","assignees_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/assignees{\/user}","branches_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/branches{\/branch}","tags_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/tags","blobs_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/git\/blobs{\/sha}","git_tags_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/git\/tags{\/sha}","git_refs_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/git\/refs{\/sha}","trees_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/git\/trees{\/sha}","statuses_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/statuses\/{sha}","languages_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/languages","stargazers_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/stargazers","contributors_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/contributors","subscribers_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/subscribers","subscription_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/subscription","commits_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/commits{\/sha}","git_commits_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/git\/commits{\/sha}","comments_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/comments{\/number}","issue_comment_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/comments\/{number}","contents_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/contents\/{+path}","compare_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/compare\/{base}...{head}","merges_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/merges","archive_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/{archive_format}{\/ref}","downloads_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/downloads","issues_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues{\/number}","pulls_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls{\/number}","milestones_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/milestones{\/number}","notifications_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/notifications{?since,all,participating}","labels_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/labels{\/name}","releases_url":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/releases{\/id}","created_at":"2014-03-07T21:29:00Z","updated_at":"2015-01-16T04:17:18Z","pushed_at":"2015-01-13T00:31:18Z","git_url":"git:\/\/github.com\/rust-lang\/rfcs.git","ssh_url":"git@github.com:rust-lang\/rfcs.git","clone_url":"https:\/\/github.com\/rust-lang\/rfcs.git","svn_url":"https:\/\/github.com\/rust-lang\/rfcs","homepage":"","size":6398,"stargazers_count":226,"watchers_count":226,"language":null,"has_issues":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":143,"mirror_url":null,"open_issues_count":220,"forks":143,"open_issues":220,"watchers":226,"default_branch":"master"}},"_links":{"self":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583"},"html":{"href":"https:\/\/github.com\/rust-lang\/rfcs\/pull\/583"},"issue":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/583"},"comments":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/issues\/583\/comments"},"review_comments":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583\/comments"},"review_comment":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/comments\/{number}"},"commits":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/pulls\/583\/commits"},"statuses":{"href":"https:\/\/api.github.com\/repos\/rust-lang\/rfcs\/statuses\/c93d35ce9ae6be36272a7772c7da56886e924afd"}}}},"public":true,"created_at":"2015-01-16T20:41:48Z","org":{"id":5430905,"login":"rust-lang","gravatar_id":"","url":"https:\/\/api.github.com\/orgs\/rust-lang","avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5430905?"}}